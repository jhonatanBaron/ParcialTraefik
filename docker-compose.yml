

services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - etl_network

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - neo4j_data:/data
    networks:
      - etl_network
    labels:
      - "traefik.http.routers.neo4j.rule=Host(`neo4j.localhost`)"
      - "traefik.http.services.neo4j.loadbalancer.server.port=7474"

  postgres:
    image: postgres:latest
    containxer_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=etl_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - etl_network
    labels:
      - "traefik.http.routers.postgresql.rule=Host(`postgresql.localhost`)"
      - "traefik.http.services.postgresql.loadbalancer.server.port=5432"

  etl_api:
    build: ./backend
    container_name: etl_api
    restart: unless-stopped
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - POSTGRES_URI=postgresql://admin:admin@postgres:5432/etl_db
    depends_on:
      - neo4j
      - postgres
    networks:
      - etl_network
    labels:
      - "traefik.http.routers.etl_api.rule=PathPrefix(`/localhost/jhonatan-baron/`)"
      - "traefik.http.services.etl_api.loadbalancer.server.port=5000"

volumes:
  neo4j_data:
  postgres_data:

networks:
  etl_network:
